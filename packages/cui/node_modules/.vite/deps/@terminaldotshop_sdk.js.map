{
  "version": 3,
  "sources": ["../../../../../node_modules/@terminaldotshop/sdk/src/version.ts", "../../../../../node_modules/@terminaldotshop/sdk/src/error.ts", "../../../../../node_modules/@terminaldotshop/sdk/src/_shims/registry.ts", "../../../../../node_modules/@terminaldotshop/sdk/src/_shims/MultipartBody.ts", "../../../../../node_modules/@terminaldotshop/sdk/src/_shims/web-runtime.ts", "../../../../../node_modules/@terminaldotshop/sdk/_shims/index.mjs", "../../../../../node_modules/@terminaldotshop/sdk/src/uploads.ts", "../../../../../node_modules/@terminaldotshop/sdk/src/core.ts", "../../../../../node_modules/@terminaldotshop/sdk/src/resource.ts", "../../../../../node_modules/@terminaldotshop/sdk/src/resources/address.ts", "../../../../../node_modules/@terminaldotshop/sdk/src/resources/app.ts", "../../../../../node_modules/@terminaldotshop/sdk/src/resources/card.ts", "../../../../../node_modules/@terminaldotshop/sdk/src/resources/cart.ts", "../../../../../node_modules/@terminaldotshop/sdk/src/resources/email.ts", "../../../../../node_modules/@terminaldotshop/sdk/src/resources/order.ts", "../../../../../node_modules/@terminaldotshop/sdk/src/resources/product.ts", "../../../../../node_modules/@terminaldotshop/sdk/src/resources/profile.ts", "../../../../../node_modules/@terminaldotshop/sdk/src/resources/subscription.ts", "../../../../../node_modules/@terminaldotshop/sdk/src/resources/token.ts", "../../../../../node_modules/@terminaldotshop/sdk/src/resources/view.ts", "../../../../../node_modules/@terminaldotshop/sdk/src/index.ts"],
  "sourcesContent": ["export const VERSION = '0.3.0-alpha'; // x-release-please-version\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { castToError, Headers } from './core';\n\nexport class TerminalError extends Error {}\n\nexport class APIError<\n  TStatus extends number | undefined = number | undefined,\n  THeaders extends Headers | undefined = Headers | undefined,\n  TError extends Object | undefined = Object | undefined,\n> extends TerminalError {\n  /** HTTP status for the response that caused the error */\n  readonly status: TStatus;\n  /** HTTP headers for the response that caused the error */\n  readonly headers: THeaders;\n  /** JSON body of the response that caused the error */\n  readonly error: TError;\n\n  constructor(status: TStatus, error: TError, message: string | undefined, headers: THeaders) {\n    super(`${APIError.makeMessage(status, error, message)}`);\n    this.status = status;\n    this.headers = headers;\n    this.error = error;\n  }\n\n  private static makeMessage(status: number | undefined, error: any, message: string | undefined) {\n    const msg =\n      error?.message ?\n        typeof error.message === 'string' ?\n          error.message\n        : JSON.stringify(error.message)\n      : error ? JSON.stringify(error)\n      : message;\n\n    if (status && msg) {\n      return `${status} ${msg}`;\n    }\n    if (status) {\n      return `${status} status code (no body)`;\n    }\n    if (msg) {\n      return msg;\n    }\n    return '(no status code or body)';\n  }\n\n  static generate(\n    status: number | undefined,\n    errorResponse: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ): APIError {\n    if (!status || !headers) {\n      return new APIConnectionError({ message, cause: castToError(errorResponse) });\n    }\n\n    const error = errorResponse as Record<string, any>;\n\n    if (status === 400) {\n      return new BadRequestError(status, error, message, headers);\n    }\n\n    if (status === 401) {\n      return new AuthenticationError(status, error, message, headers);\n    }\n\n    if (status === 403) {\n      return new PermissionDeniedError(status, error, message, headers);\n    }\n\n    if (status === 404) {\n      return new NotFoundError(status, error, message, headers);\n    }\n\n    if (status === 409) {\n      return new ConflictError(status, error, message, headers);\n    }\n\n    if (status === 422) {\n      return new UnprocessableEntityError(status, error, message, headers);\n    }\n\n    if (status === 429) {\n      return new RateLimitError(status, error, message, headers);\n    }\n\n    if (status >= 500) {\n      return new InternalServerError(status, error, message, headers);\n    }\n\n    return new APIError(status, error, message, headers);\n  }\n}\n\nexport class APIUserAbortError extends APIError<undefined, undefined, undefined> {\n  constructor({ message }: { message?: string } = {}) {\n    super(undefined, undefined, message || 'Request was aborted.', undefined);\n  }\n}\n\nexport class APIConnectionError extends APIError<undefined, undefined, undefined> {\n  constructor({ message, cause }: { message?: string | undefined; cause?: Error | undefined }) {\n    super(undefined, undefined, message || 'Connection error.', undefined);\n    // in some environments the 'cause' property is already declared\n    // @ts-ignore\n    if (cause) this.cause = cause;\n  }\n}\n\nexport class APIConnectionTimeoutError extends APIConnectionError {\n  constructor({ message }: { message?: string } = {}) {\n    super({ message: message ?? 'Request timed out.' });\n  }\n}\n\nexport class BadRequestError extends APIError<400, Headers> {}\n\nexport class AuthenticationError extends APIError<401, Headers> {}\n\nexport class PermissionDeniedError extends APIError<403, Headers> {}\n\nexport class NotFoundError extends APIError<404, Headers> {}\n\nexport class ConflictError extends APIError<409, Headers> {}\n\nexport class UnprocessableEntityError extends APIError<422, Headers> {}\n\nexport class RateLimitError extends APIError<429, Headers> {}\n\nexport class InternalServerError extends APIError<number, Headers> {}\n", "/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nimport { type RequestOptions } from '../core';\n\nexport interface Shims {\n  kind: string;\n  fetch: any;\n  Request: any;\n  Response: any;\n  Headers: any;\n  FormData: any;\n  Blob: any;\n  File: any;\n  ReadableStream: any;\n  getMultipartRequestOptions: <T = Record<string, unknown>>(\n    form: Shims['FormData'],\n    opts: RequestOptions<T>,\n  ) => Promise<RequestOptions<T>>;\n  getDefaultAgent: (url: string) => any;\n  fileFromPath:\n    | ((path: string, filename?: string, options?: {}) => Promise<Shims['File']>)\n    | ((path: string, options?: {}) => Promise<Shims['File']>);\n  isFsReadStream: (value: any) => boolean;\n}\n\nexport let auto = false;\nexport let kind: Shims['kind'] | undefined = undefined;\nexport let fetch: Shims['fetch'] | undefined = undefined;\nexport let Request: Shims['Request'] | undefined = undefined;\nexport let Response: Shims['Response'] | undefined = undefined;\nexport let Headers: Shims['Headers'] | undefined = undefined;\nexport let FormData: Shims['FormData'] | undefined = undefined;\nexport let Blob: Shims['Blob'] | undefined = undefined;\nexport let File: Shims['File'] | undefined = undefined;\nexport let ReadableStream: Shims['ReadableStream'] | undefined = undefined;\nexport let getMultipartRequestOptions: Shims['getMultipartRequestOptions'] | undefined = undefined;\nexport let getDefaultAgent: Shims['getDefaultAgent'] | undefined = undefined;\nexport let fileFromPath: Shims['fileFromPath'] | undefined = undefined;\nexport let isFsReadStream: Shims['isFsReadStream'] | undefined = undefined;\n\nexport function setShims(shims: Shims, options: { auto: boolean } = { auto: false }) {\n  if (auto) {\n    throw new Error(\n      `you must \\`import '@terminaldotshop/sdk/shims/${shims.kind}'\\` before importing anything else from @terminaldotshop/sdk`,\n    );\n  }\n  if (kind) {\n    throw new Error(\n      `can't \\`import '@terminaldotshop/sdk/shims/${shims.kind}'\\` after \\`import '@terminaldotshop/sdk/shims/${kind}'\\``,\n    );\n  }\n  auto = options.auto;\n  kind = shims.kind;\n  fetch = shims.fetch;\n  Request = shims.Request;\n  Response = shims.Response;\n  Headers = shims.Headers;\n  FormData = shims.FormData;\n  Blob = shims.Blob;\n  File = shims.File;\n  ReadableStream = shims.ReadableStream;\n  getMultipartRequestOptions = shims.getMultipartRequestOptions;\n  getDefaultAgent = shims.getDefaultAgent;\n  fileFromPath = shims.fileFromPath;\n  isFsReadStream = shims.isFsReadStream;\n}\n", "/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nexport class MultipartBody {\n  constructor(public body: any) {}\n  get [Symbol.toStringTag](): string {\n    return 'MultipartBody';\n  }\n}\n", "/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nimport { MultipartBody } from './MultipartBody';\nimport { type RequestOptions } from '../core';\nimport { type Shims } from './registry';\n\nexport function getRuntime({ manuallyImported }: { manuallyImported?: boolean } = {}): Shims {\n  const recommendation =\n    manuallyImported ?\n      `You may need to use polyfills`\n    : `Add one of these imports before your first \\`import â€¦ from '@terminaldotshop/sdk'\\`:\n- \\`import '@terminaldotshop/sdk/shims/node'\\` (if you're running on Node)\n- \\`import '@terminaldotshop/sdk/shims/web'\\` (otherwise)\n`;\n\n  let _fetch, _Request, _Response, _Headers;\n  try {\n    // @ts-ignore\n    _fetch = fetch;\n    // @ts-ignore\n    _Request = Request;\n    // @ts-ignore\n    _Response = Response;\n    // @ts-ignore\n    _Headers = Headers;\n  } catch (error) {\n    throw new Error(\n      `this environment is missing the following Web Fetch API type: ${\n        (error as any).message\n      }. ${recommendation}`,\n    );\n  }\n\n  return {\n    kind: 'web',\n    fetch: _fetch,\n    Request: _Request,\n    Response: _Response,\n    Headers: _Headers,\n    FormData:\n      // @ts-ignore\n      typeof FormData !== 'undefined' ? FormData : (\n        class FormData {\n          // @ts-ignore\n          constructor() {\n            throw new Error(\n              `file uploads aren't supported in this environment yet as 'FormData' is undefined. ${recommendation}`,\n            );\n          }\n        }\n      ),\n    Blob:\n      typeof Blob !== 'undefined' ? Blob : (\n        class Blob {\n          constructor() {\n            throw new Error(\n              `file uploads aren't supported in this environment yet as 'Blob' is undefined. ${recommendation}`,\n            );\n          }\n        }\n      ),\n    File:\n      // @ts-ignore\n      typeof File !== 'undefined' ? File : (\n        class File {\n          // @ts-ignore\n          constructor() {\n            throw new Error(\n              `file uploads aren't supported in this environment yet as 'File' is undefined. ${recommendation}`,\n            );\n          }\n        }\n      ),\n    ReadableStream:\n      // @ts-ignore\n      typeof ReadableStream !== 'undefined' ? ReadableStream : (\n        class ReadableStream {\n          // @ts-ignore\n          constructor() {\n            throw new Error(\n              `streaming isn't supported in this environment yet as 'ReadableStream' is undefined. ${recommendation}`,\n            );\n          }\n        }\n      ),\n    getMultipartRequestOptions: async <T = Record<string, unknown>>(\n      // @ts-ignore\n      form: FormData,\n      opts: RequestOptions<T>,\n    ): Promise<RequestOptions<T>> => ({\n      ...opts,\n      body: new MultipartBody(form) as any,\n    }),\n    getDefaultAgent: (url: string) => undefined,\n    fileFromPath: () => {\n      throw new Error(\n        'The `fileFromPath` function is only supported in Node. See the README for more details: https://www.github.com/terminaldotshop/terminal-sdk-js#file-uploads',\n      );\n    },\n    isFsReadStream: (value: any) => false,\n  };\n}\n", "/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nimport * as shims from './registry.mjs';\nimport * as auto from '@terminaldotshop/sdk/_shims/auto/runtime';\nif (!shims.kind) shims.setShims(auto.getRuntime(), { auto: true });\nexport * from './registry.mjs';\n", "import { type RequestOptions } from './core';\nimport {\n  FormData,\n  File,\n  type Blob,\n  type FilePropertyBag,\n  getMultipartRequestOptions,\n  type FsReadStream,\n  isFsReadStream,\n} from './_shims/index';\nimport { MultipartBody } from './_shims/MultipartBody';\nexport { fileFromPath } from './_shims/index';\n\ntype BlobLikePart = string | ArrayBuffer | ArrayBufferView | BlobLike | Uint8Array | DataView;\nexport type BlobPart = string | ArrayBuffer | ArrayBufferView | Blob | Uint8Array | DataView;\n\n/**\n * Typically, this is a native \"File\" class.\n *\n * We provide the {@link toFile} utility to convert a variety of objects\n * into the File class.\n *\n * For convenience, you can also pass a fetch Response, or in Node,\n * the result of fs.createReadStream().\n */\nexport type Uploadable = FileLike | ResponseLike | FsReadStream;\n\n/**\n * Intended to match web.Blob, node.Blob, node-fetch.Blob, etc.\n */\nexport interface BlobLike {\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/size) */\n  readonly size: number;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/type) */\n  readonly type: string;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/text) */\n  text(): Promise<string>;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/slice) */\n  slice(start?: number, end?: number): BlobLike;\n  // unfortunately @types/node-fetch@^2.6.4 doesn't type the arrayBuffer method\n}\n\n/**\n * Intended to match web.File, node.File, node-fetch.File, etc.\n */\nexport interface FileLike extends BlobLike {\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/File/lastModified) */\n  readonly lastModified: number;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/File/name) */\n  readonly name: string;\n}\n\n/**\n * Intended to match web.Response, node.Response, node-fetch.Response, etc.\n */\nexport interface ResponseLike {\n  url: string;\n  blob(): Promise<BlobLike>;\n}\n\nexport const isResponseLike = (value: any): value is ResponseLike =>\n  value != null &&\n  typeof value === 'object' &&\n  typeof value.url === 'string' &&\n  typeof value.blob === 'function';\n\nexport const isFileLike = (value: any): value is FileLike =>\n  value != null &&\n  typeof value === 'object' &&\n  typeof value.name === 'string' &&\n  typeof value.lastModified === 'number' &&\n  isBlobLike(value);\n\n/**\n * The BlobLike type omits arrayBuffer() because @types/node-fetch@^2.6.4 lacks it; but this check\n * adds the arrayBuffer() method type because it is available and used at runtime\n */\nexport const isBlobLike = (value: any): value is BlobLike & { arrayBuffer(): Promise<ArrayBuffer> } =>\n  value != null &&\n  typeof value === 'object' &&\n  typeof value.size === 'number' &&\n  typeof value.type === 'string' &&\n  typeof value.text === 'function' &&\n  typeof value.slice === 'function' &&\n  typeof value.arrayBuffer === 'function';\n\nexport const isUploadable = (value: any): value is Uploadable => {\n  return isFileLike(value) || isResponseLike(value) || isFsReadStream(value);\n};\n\nexport type ToFileInput = Uploadable | Exclude<BlobLikePart, string> | AsyncIterable<BlobLikePart>;\n\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nexport async function toFile(\n  value: ToFileInput | PromiseLike<ToFileInput>,\n  name?: string | null | undefined,\n  options?: FilePropertyBag | undefined,\n): Promise<FileLike> {\n  // If it's a promise, resolve it.\n  value = await value;\n\n  // If we've been given a `File` we don't need to do anything\n  if (isFileLike(value)) {\n    return value;\n  }\n\n  if (isResponseLike(value)) {\n    const blob = await value.blob();\n    name ||= new URL(value.url).pathname.split(/[\\\\/]/).pop() ?? 'unknown_file';\n\n    // we need to convert the `Blob` into an array buffer because the `Blob` class\n    // that `node-fetch` defines is incompatible with the web standard which results\n    // in `new File` interpreting it as a string instead of binary data.\n    const data = isBlobLike(blob) ? [(await blob.arrayBuffer()) as any] : [blob];\n\n    return new File(data, name, options);\n  }\n\n  const bits = await getBytes(value);\n\n  name ||= getName(value) ?? 'unknown_file';\n\n  if (!options?.type) {\n    const type = (bits[0] as any)?.type;\n    if (typeof type === 'string') {\n      options = { ...options, type };\n    }\n  }\n\n  return new File(bits, name, options);\n}\n\nasync function getBytes(value: ToFileInput): Promise<Array<BlobPart>> {\n  let parts: Array<BlobPart> = [];\n  if (\n    typeof value === 'string' ||\n    ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n    value instanceof ArrayBuffer\n  ) {\n    parts.push(value);\n  } else if (isBlobLike(value)) {\n    parts.push(await value.arrayBuffer());\n  } else if (\n    isAsyncIterableIterator(value) // includes Readable, ReadableStream, etc.\n  ) {\n    for await (const chunk of value) {\n      parts.push(chunk as BlobPart); // TODO, consider validating?\n    }\n  } else {\n    throw new Error(\n      `Unexpected data type: ${typeof value}; constructor: ${value?.constructor\n        ?.name}; props: ${propsForError(value)}`,\n    );\n  }\n\n  return parts;\n}\n\nfunction propsForError(value: any): string {\n  const props = Object.getOwnPropertyNames(value);\n  return `[${props.map((p) => `\"${p}\"`).join(', ')}]`;\n}\n\nfunction getName(value: any): string | undefined {\n  return (\n    getStringFromMaybeBuffer(value.name) ||\n    getStringFromMaybeBuffer(value.filename) ||\n    // For fs.ReadStream\n    getStringFromMaybeBuffer(value.path)?.split(/[\\\\/]/).pop()\n  );\n}\n\nconst getStringFromMaybeBuffer = (x: string | Buffer | unknown): string | undefined => {\n  if (typeof x === 'string') return x;\n  if (typeof Buffer !== 'undefined' && x instanceof Buffer) return String(x);\n  return undefined;\n};\n\nconst isAsyncIterableIterator = (value: any): value is AsyncIterableIterator<unknown> =>\n  value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\n\nexport const isMultipartBody = (body: any): body is MultipartBody =>\n  body && typeof body === 'object' && body.body && body[Symbol.toStringTag] === 'MultipartBody';\n\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nexport const maybeMultipartFormRequestOptions = async <T = Record<string, unknown>>(\n  opts: RequestOptions<T>,\n): Promise<RequestOptions<T | MultipartBody>> => {\n  if (!hasUploadableValue(opts.body)) return opts;\n\n  const form = await createForm(opts.body);\n  return getMultipartRequestOptions(form, opts);\n};\n\nexport const multipartFormRequestOptions = async <T = Record<string, unknown>>(\n  opts: RequestOptions<T>,\n): Promise<RequestOptions<T | MultipartBody>> => {\n  const form = await createForm(opts.body);\n  return getMultipartRequestOptions(form, opts);\n};\n\nexport const createForm = async <T = Record<string, unknown>>(body: T | undefined): Promise<FormData> => {\n  const form = new FormData();\n  await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n  return form;\n};\n\nconst hasUploadableValue = (value: unknown): boolean => {\n  if (isUploadable(value)) return true;\n  if (Array.isArray(value)) return value.some(hasUploadableValue);\n  if (value && typeof value === 'object') {\n    for (const k in value) {\n      if (hasUploadableValue((value as any)[k])) return true;\n    }\n  }\n  return false;\n};\n\nconst addFormValue = async (form: FormData, key: string, value: unknown): Promise<void> => {\n  if (value === undefined) return;\n  if (value == null) {\n    throw new TypeError(\n      `Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`,\n    );\n  }\n\n  // TODO: make nested formats configurable\n  if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n    form.append(key, String(value));\n  } else if (isUploadable(value)) {\n    const file = await toFile(value);\n    form.append(key, file as File);\n  } else if (Array.isArray(value)) {\n    await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\n  } else if (typeof value === 'object') {\n    await Promise.all(\n      Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)),\n    );\n  } else {\n    throw new TypeError(\n      `Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`,\n    );\n  }\n};\n", "import { VERSION } from './version';\nimport {\n  TerminalError,\n  APIError,\n  APIConnectionError,\n  APIConnectionTimeoutError,\n  APIUserAbortError,\n} from './error';\nimport {\n  kind as shimsKind,\n  type Readable,\n  getDefaultAgent,\n  type Agent,\n  fetch,\n  type RequestInfo,\n  type RequestInit,\n  type Response,\n  type HeadersInit,\n} from './_shims/index';\nexport { type Response };\nimport { BlobLike, isBlobLike, isMultipartBody } from './uploads';\nexport {\n  maybeMultipartFormRequestOptions,\n  multipartFormRequestOptions,\n  createForm,\n  type Uploadable,\n} from './uploads';\n\nexport type Fetch = (url: RequestInfo, init?: RequestInit) => Promise<Response>;\n\ntype PromiseOrValue<T> = T | Promise<T>;\n\ntype APIResponseProps = {\n  response: Response;\n  options: FinalRequestOptions;\n  controller: AbortController;\n};\n\nasync function defaultParseResponse<T>(props: APIResponseProps): Promise<T> {\n  const { response } = props;\n  // fetch refuses to read the body when the status code is 204.\n  if (response.status === 204) {\n    return null as T;\n  }\n\n  if (props.options.__binaryResponse) {\n    return response as unknown as T;\n  }\n\n  const contentType = response.headers.get('content-type');\n  const isJSON =\n    contentType?.includes('application/json') || contentType?.includes('application/vnd.api+json');\n  if (isJSON) {\n    const json = await response.json();\n\n    debug('response', response.status, response.url, response.headers, json);\n\n    return json as T;\n  }\n\n  const text = await response.text();\n  debug('response', response.status, response.url, response.headers, text);\n\n  // TODO handle blob, arraybuffer, other content types, etc.\n  return text as unknown as T;\n}\n\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise<T> extends Promise<T> {\n  private parsedPromise: Promise<T> | undefined;\n\n  constructor(\n    private responsePromise: Promise<APIResponseProps>,\n    private parseResponse: (props: APIResponseProps) => PromiseOrValue<T> = defaultParseResponse,\n  ) {\n    super((resolve) => {\n      // this is maybe a bit weird but this has to be a no-op to not implicitly\n      // parse the response body; instead .then, .catch, .finally are overridden\n      // to parse the response\n      resolve(null as any);\n    });\n  }\n\n  _thenUnwrap<U>(transform: (data: T, props: APIResponseProps) => U): APIPromise<U> {\n    return new APIPromise(this.responsePromise, async (props) =>\n      transform(await this.parseResponse(props), props),\n    );\n  }\n\n  /**\n   * Gets the raw `Response` instance instead of parsing the response\n   * data.\n   *\n   * If you want to parse the response body but still get the `Response`\n   * instance, you can use {@link withResponse()}.\n   *\n   * ðŸ‘‹ Getting the wrong TypeScript type for `Response`?\n   * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n   * or add one of these imports before your first `import â€¦ from '@terminaldotshop/sdk'`:\n   * - `import '@terminaldotshop/sdk/shims/node'` (if you're running on Node)\n   * - `import '@terminaldotshop/sdk/shims/web'` (otherwise)\n   */\n  asResponse(): Promise<Response> {\n    return this.responsePromise.then((p) => p.response);\n  }\n  /**\n   * Gets the parsed response data and the raw `Response` instance.\n   *\n   * If you just want to get the raw `Response` instance without parsing it,\n   * you can use {@link asResponse()}.\n   *\n   *\n   * ðŸ‘‹ Getting the wrong TypeScript type for `Response`?\n   * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n   * or add one of these imports before your first `import â€¦ from '@terminaldotshop/sdk'`:\n   * - `import '@terminaldotshop/sdk/shims/node'` (if you're running on Node)\n   * - `import '@terminaldotshop/sdk/shims/web'` (otherwise)\n   */\n  async withResponse(): Promise<{ data: T; response: Response }> {\n    const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n    return { data, response };\n  }\n\n  private parse(): Promise<T> {\n    if (!this.parsedPromise) {\n      this.parsedPromise = this.responsePromise.then(this.parseResponse);\n    }\n    return this.parsedPromise;\n  }\n\n  override then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,\n  ): Promise<TResult1 | TResult2> {\n    return this.parse().then(onfulfilled, onrejected);\n  }\n\n  override catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,\n  ): Promise<T | TResult> {\n    return this.parse().catch(onrejected);\n  }\n\n  override finally(onfinally?: (() => void) | undefined | null): Promise<T> {\n    return this.parse().finally(onfinally);\n  }\n}\n\nexport abstract class APIClient {\n  baseURL: string;\n  maxRetries: number;\n  timeout: number;\n  httpAgent: Agent | undefined;\n\n  private fetch: Fetch;\n  protected idempotencyHeader?: string;\n\n  constructor({\n    baseURL,\n    maxRetries = 2,\n    timeout = 60000, // 1 minute\n    httpAgent,\n    fetch: overridenFetch,\n  }: {\n    baseURL: string;\n    maxRetries?: number | undefined;\n    timeout: number | undefined;\n    httpAgent: Agent | undefined;\n    fetch: Fetch | undefined;\n  }) {\n    this.baseURL = baseURL;\n    this.maxRetries = validatePositiveInteger('maxRetries', maxRetries);\n    this.timeout = validatePositiveInteger('timeout', timeout);\n    this.httpAgent = httpAgent;\n\n    this.fetch = overridenFetch ?? fetch;\n  }\n\n  protected authHeaders(opts: FinalRequestOptions): Headers {\n    return {};\n  }\n\n  /**\n   * Override this to add your own default headers, for example:\n   *\n   *  {\n   *    ...super.defaultHeaders(),\n   *    Authorization: 'Bearer 123',\n   *  }\n   */\n  protected defaultHeaders(opts: FinalRequestOptions): Headers {\n    return {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'User-Agent': this.getUserAgent(),\n      ...getPlatformHeaders(),\n      ...this.authHeaders(opts),\n    };\n  }\n\n  protected abstract defaultQuery(): DefaultQuery | undefined;\n\n  /**\n   * Override this to add your own headers validation:\n   */\n  protected validateHeaders(headers: Headers, customHeaders: Headers) {}\n\n  protected defaultIdempotencyKey(): string {\n    return `stainless-node-retry-${uuid4()}`;\n  }\n\n  get<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('get', path, opts);\n  }\n\n  post<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('post', path, opts);\n  }\n\n  patch<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('patch', path, opts);\n  }\n\n  put<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('put', path, opts);\n  }\n\n  delete<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('delete', path, opts);\n  }\n\n  private methodRequest<Req, Rsp>(\n    method: HTTPMethod,\n    path: string,\n    opts?: PromiseOrValue<RequestOptions<Req>>,\n  ): APIPromise<Rsp> {\n    return this.request(\n      Promise.resolve(opts).then(async (opts) => {\n        const body =\n          opts && isBlobLike(opts?.body) ? new DataView(await opts.body.arrayBuffer())\n          : opts?.body instanceof DataView ? opts.body\n          : opts?.body instanceof ArrayBuffer ? new DataView(opts.body)\n          : opts && ArrayBuffer.isView(opts?.body) ? new DataView(opts.body.buffer)\n          : opts?.body;\n        return { method, path, ...opts, body };\n      }),\n    );\n  }\n\n  getAPIList<Item, PageClass extends AbstractPage<Item> = AbstractPage<Item>>(\n    path: string,\n    Page: new (...args: any[]) => PageClass,\n    opts?: RequestOptions<any>,\n  ): PagePromise<PageClass, Item> {\n    return this.requestAPIList(Page, { method: 'get', path, ...opts });\n  }\n\n  private calculateContentLength(body: unknown): string | null {\n    if (typeof body === 'string') {\n      if (typeof Buffer !== 'undefined') {\n        return Buffer.byteLength(body, 'utf8').toString();\n      }\n\n      if (typeof TextEncoder !== 'undefined') {\n        const encoder = new TextEncoder();\n        const encoded = encoder.encode(body);\n        return encoded.length.toString();\n      }\n    } else if (ArrayBuffer.isView(body)) {\n      return body.byteLength.toString();\n    }\n\n    return null;\n  }\n\n  buildRequest<Req>(\n    options: FinalRequestOptions<Req>,\n    { retryCount = 0 }: { retryCount?: number } = {},\n  ): { req: RequestInit; url: string; timeout: number } {\n    const { method, path, query, headers: headers = {} } = options;\n\n    const body =\n      ArrayBuffer.isView(options.body) || (options.__binaryRequest && typeof options.body === 'string') ?\n        options.body\n      : isMultipartBody(options.body) ? options.body.body\n      : options.body ? JSON.stringify(options.body, null, 2)\n      : null;\n    const contentLength = this.calculateContentLength(body);\n\n    const url = this.buildURL(path!, query);\n    if ('timeout' in options) validatePositiveInteger('timeout', options.timeout);\n    const timeout = options.timeout ?? this.timeout;\n    const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n    const minAgentTimeout = timeout + 1000;\n    if (\n      typeof (httpAgent as any)?.options?.timeout === 'number' &&\n      minAgentTimeout > ((httpAgent as any).options.timeout ?? 0)\n    ) {\n      // Allow any given request to bump our agent active socket timeout.\n      // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n      // and without mutating agent we would need to create more of them.\n      // This tradeoff optimizes for performance.\n      (httpAgent as any).options.timeout = minAgentTimeout;\n    }\n\n    if (this.idempotencyHeader && method !== 'get') {\n      if (!options.idempotencyKey) options.idempotencyKey = this.defaultIdempotencyKey();\n      headers[this.idempotencyHeader] = options.idempotencyKey;\n    }\n\n    const reqHeaders = this.buildHeaders({ options, headers, contentLength, retryCount });\n\n    const req: RequestInit = {\n      method,\n      ...(body && { body: body as any }),\n      headers: reqHeaders,\n      ...(httpAgent && { agent: httpAgent }),\n      // @ts-ignore node-fetch uses a custom AbortSignal type that is\n      // not compatible with standard web types\n      signal: options.signal ?? null,\n    };\n\n    return { req, url, timeout };\n  }\n\n  private buildHeaders({\n    options,\n    headers,\n    contentLength,\n    retryCount,\n  }: {\n    options: FinalRequestOptions;\n    headers: Record<string, string | null | undefined>;\n    contentLength: string | null | undefined;\n    retryCount: number;\n  }): Record<string, string> {\n    const reqHeaders: Record<string, string> = {};\n    if (contentLength) {\n      reqHeaders['content-length'] = contentLength;\n    }\n\n    const defaultHeaders = this.defaultHeaders(options);\n    applyHeadersMut(reqHeaders, defaultHeaders);\n    applyHeadersMut(reqHeaders, headers);\n\n    // let builtin fetch set the Content-Type for multipart bodies\n    if (isMultipartBody(options.body) && shimsKind !== 'node') {\n      delete reqHeaders['content-type'];\n    }\n\n    // Don't set the retry count header if it was already set or removed through default headers or by the\n    // caller. We check `defaultHeaders` and `headers`, which can contain nulls, instead of `reqHeaders` to\n    // account for the removal case.\n    if (\n      getHeader(defaultHeaders, 'x-stainless-retry-count') === undefined &&\n      getHeader(headers, 'x-stainless-retry-count') === undefined\n    ) {\n      reqHeaders['x-stainless-retry-count'] = String(retryCount);\n    }\n\n    this.validateHeaders(reqHeaders, headers);\n\n    return reqHeaders;\n  }\n\n  /**\n   * Used as a callback for mutating the given `FinalRequestOptions` object.\n   */\n  protected async prepareOptions(options: FinalRequestOptions): Promise<void> {}\n\n  /**\n   * Used as a callback for mutating the given `RequestInit` object.\n   *\n   * This is useful for cases where you want to add certain headers based off of\n   * the request properties, e.g. `method` or `url`.\n   */\n  protected async prepareRequest(\n    request: RequestInit,\n    { url, options }: { url: string; options: FinalRequestOptions },\n  ): Promise<void> {}\n\n  protected parseHeaders(headers: HeadersInit | null | undefined): Record<string, string> {\n    return (\n      !headers ? {}\n      : Symbol.iterator in headers ?\n        Object.fromEntries(Array.from(headers as Iterable<string[]>).map((header) => [...header]))\n      : { ...headers }\n    );\n  }\n\n  protected makeStatusError(\n    status: number | undefined,\n    error: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ): APIError {\n    return APIError.generate(status, error, message, headers);\n  }\n\n  request<Req, Rsp>(\n    options: PromiseOrValue<FinalRequestOptions<Req>>,\n    remainingRetries: number | null = null,\n  ): APIPromise<Rsp> {\n    return new APIPromise(this.makeRequest(options, remainingRetries));\n  }\n\n  private async makeRequest<Req>(\n    optionsInput: PromiseOrValue<FinalRequestOptions<Req>>,\n    retriesRemaining: number | null,\n  ): Promise<APIResponseProps> {\n    const options = await optionsInput;\n    const maxRetries = options.maxRetries ?? this.maxRetries;\n    if (retriesRemaining == null) {\n      retriesRemaining = maxRetries;\n    }\n\n    await this.prepareOptions(options);\n\n    const { req, url, timeout } = this.buildRequest(options, { retryCount: maxRetries - retriesRemaining });\n\n    await this.prepareRequest(req, { url, options });\n\n    debug('request', url, options, req.headers);\n\n    if (options.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n\n    const controller = new AbortController();\n    const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n\n    if (response instanceof Error) {\n      if (options.signal?.aborted) {\n        throw new APIUserAbortError();\n      }\n      if (retriesRemaining) {\n        return this.retryRequest(options, retriesRemaining);\n      }\n      if (response.name === 'AbortError') {\n        throw new APIConnectionTimeoutError();\n      }\n      throw new APIConnectionError({ cause: response });\n    }\n\n    const responseHeaders = createResponseHeaders(response.headers);\n\n    if (!response.ok) {\n      if (retriesRemaining && this.shouldRetry(response)) {\n        const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n        debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders);\n        return this.retryRequest(options, retriesRemaining, responseHeaders);\n      }\n\n      const errText = await response.text().catch((e) => castToError(e).message);\n      const errJSON = safeJSON(errText);\n      const errMessage = errJSON ? undefined : errText;\n      const retryMessage = retriesRemaining ? `(error; no more retries left)` : `(error; not retryable)`;\n\n      debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders, errMessage);\n\n      const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n      throw err;\n    }\n\n    return { response, options, controller };\n  }\n\n  requestAPIList<Item = unknown, PageClass extends AbstractPage<Item> = AbstractPage<Item>>(\n    Page: new (...args: ConstructorParameters<typeof AbstractPage>) => PageClass,\n    options: FinalRequestOptions,\n  ): PagePromise<PageClass, Item> {\n    const request = this.makeRequest(options, null);\n    return new PagePromise<PageClass, Item>(this, request, Page);\n  }\n\n  buildURL<Req>(path: string, query: Req | null | undefined): string {\n    const url =\n      isAbsoluteURL(path) ?\n        new URL(path)\n      : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n\n    const defaultQuery = this.defaultQuery();\n    if (!isEmptyObj(defaultQuery)) {\n      query = { ...defaultQuery, ...query } as Req;\n    }\n\n    if (typeof query === 'object' && query && !Array.isArray(query)) {\n      url.search = this.stringifyQuery(query as Record<string, unknown>);\n    }\n\n    return url.toString();\n  }\n\n  protected stringifyQuery(query: Record<string, unknown>): string {\n    return Object.entries(query)\n      .filter(([_, value]) => typeof value !== 'undefined')\n      .map(([key, value]) => {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n          return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n        }\n        if (value === null) {\n          return `${encodeURIComponent(key)}=`;\n        }\n        throw new TerminalError(\n          `Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`,\n        );\n      })\n      .join('&');\n  }\n\n  async fetchWithTimeout(\n    url: RequestInfo,\n    init: RequestInit | undefined,\n    ms: number,\n    controller: AbortController,\n  ): Promise<Response> {\n    const { signal, ...options } = init || {};\n    if (signal) signal.addEventListener('abort', () => controller.abort());\n\n    const timeout = setTimeout(() => controller.abort(), ms);\n\n    return (\n      // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n      this.fetch.call(undefined, url, { signal: controller.signal as any, ...options }).finally(() => {\n        clearTimeout(timeout);\n      })\n    );\n  }\n\n  private shouldRetry(response: Response): boolean {\n    // Note this is not a standard header.\n    const shouldRetryHeader = response.headers.get('x-should-retry');\n\n    // If the server explicitly says whether or not to retry, obey.\n    if (shouldRetryHeader === 'true') return true;\n    if (shouldRetryHeader === 'false') return false;\n\n    // Retry on request timeouts.\n    if (response.status === 408) return true;\n\n    // Retry on lock timeouts.\n    if (response.status === 409) return true;\n\n    // Retry on rate limits.\n    if (response.status === 429) return true;\n\n    // Retry internal errors.\n    if (response.status >= 500) return true;\n\n    return false;\n  }\n\n  private async retryRequest(\n    options: FinalRequestOptions,\n    retriesRemaining: number,\n    responseHeaders?: Headers | undefined,\n  ): Promise<APIResponseProps> {\n    let timeoutMillis: number | undefined;\n\n    // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n    const retryAfterMillisHeader = responseHeaders?.['retry-after-ms'];\n    if (retryAfterMillisHeader) {\n      const timeoutMs = parseFloat(retryAfterMillisHeader);\n      if (!Number.isNaN(timeoutMs)) {\n        timeoutMillis = timeoutMs;\n      }\n    }\n\n    // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n    const retryAfterHeader = responseHeaders?.['retry-after'];\n    if (retryAfterHeader && !timeoutMillis) {\n      const timeoutSeconds = parseFloat(retryAfterHeader);\n      if (!Number.isNaN(timeoutSeconds)) {\n        timeoutMillis = timeoutSeconds * 1000;\n      } else {\n        timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n      }\n    }\n\n    // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n    // just do what it says, but otherwise calculate a default\n    if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n      const maxRetries = options.maxRetries ?? this.maxRetries;\n      timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n    }\n    await sleep(timeoutMillis);\n\n    return this.makeRequest(options, retriesRemaining - 1);\n  }\n\n  private calculateDefaultRetryTimeoutMillis(retriesRemaining: number, maxRetries: number): number {\n    const initialRetryDelay = 0.5;\n    const maxRetryDelay = 8.0;\n\n    const numRetries = maxRetries - retriesRemaining;\n\n    // Apply exponential backoff, but not more than the max.\n    const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n\n    // Apply some jitter, take up to at most 25 percent of the retry time.\n    const jitter = 1 - Math.random() * 0.25;\n\n    return sleepSeconds * jitter * 1000;\n  }\n\n  private getUserAgent(): string {\n    return `${this.constructor.name}/JS ${VERSION}`;\n  }\n}\n\nexport type PageInfo = { url: URL } | { params: Record<string, unknown> | null };\n\nexport abstract class AbstractPage<Item> implements AsyncIterable<Item> {\n  #client: APIClient;\n  protected options: FinalRequestOptions;\n\n  protected response: Response;\n  protected body: unknown;\n\n  constructor(client: APIClient, response: Response, body: unknown, options: FinalRequestOptions) {\n    this.#client = client;\n    this.options = options;\n    this.response = response;\n    this.body = body;\n  }\n\n  /**\n   * @deprecated Use nextPageInfo instead\n   */\n  abstract nextPageParams(): Partial<Record<string, unknown>> | null;\n  abstract nextPageInfo(): PageInfo | null;\n\n  abstract getPaginatedItems(): Item[];\n\n  hasNextPage(): boolean {\n    const items = this.getPaginatedItems();\n    if (!items.length) return false;\n    return this.nextPageInfo() != null;\n  }\n\n  async getNextPage(): Promise<this> {\n    const nextInfo = this.nextPageInfo();\n    if (!nextInfo) {\n      throw new TerminalError(\n        'No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.',\n      );\n    }\n    const nextOptions = { ...this.options };\n    if ('params' in nextInfo && typeof nextOptions.query === 'object') {\n      nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\n    } else if ('url' in nextInfo) {\n      const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n      for (const [key, value] of params) {\n        nextInfo.url.searchParams.set(key, value as any);\n      }\n      nextOptions.query = undefined;\n      nextOptions.path = nextInfo.url.toString();\n    }\n    return await this.#client.requestAPIList(this.constructor as any, nextOptions);\n  }\n\n  async *iterPages(): AsyncGenerator<this> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let page: this = this;\n    yield page;\n    while (page.hasNextPage()) {\n      page = await page.getNextPage();\n      yield page;\n    }\n  }\n\n  async *[Symbol.asyncIterator](): AsyncGenerator<Item> {\n    for await (const page of this.iterPages()) {\n      for (const item of page.getPaginatedItems()) {\n        yield item;\n      }\n    }\n  }\n}\n\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise<\n    PageClass extends AbstractPage<Item>,\n    Item = ReturnType<PageClass['getPaginatedItems']>[number],\n  >\n  extends APIPromise<PageClass>\n  implements AsyncIterable<Item>\n{\n  constructor(\n    client: APIClient,\n    request: Promise<APIResponseProps>,\n    Page: new (...args: ConstructorParameters<typeof AbstractPage>) => PageClass,\n  ) {\n    super(\n      request,\n      async (props) => new Page(client, props.response, await defaultParseResponse(props), props.options),\n    );\n  }\n\n  /**\n   * Allow auto-paginating iteration on an unawaited list call, eg:\n   *\n   *    for await (const item of client.items.list()) {\n   *      console.log(item)\n   *    }\n   */\n  async *[Symbol.asyncIterator](): AsyncGenerator<Item> {\n    const page = await this;\n    for await (const item of page) {\n      yield item;\n    }\n  }\n}\n\nexport const createResponseHeaders = (\n  headers: Awaited<ReturnType<Fetch>>['headers'],\n): Record<string, string> => {\n  return new Proxy(\n    Object.fromEntries(\n      // @ts-ignore\n      headers.entries(),\n    ),\n    {\n      get(target, name) {\n        const key = name.toString();\n        return target[key.toLowerCase()] || target[key];\n      },\n    },\n  );\n};\n\ntype HTTPMethod = 'get' | 'post' | 'put' | 'patch' | 'delete';\n\nexport type RequestClient = { fetch: Fetch };\nexport type Headers = Record<string, string | null | undefined>;\nexport type DefaultQuery = Record<string, string | undefined>;\nexport type KeysEnum<T> = { [P in keyof Required<T>]: true };\n\nexport type RequestOptions<\n  Req = unknown | Record<string, unknown> | Readable | BlobLike | ArrayBufferView | ArrayBuffer,\n> = {\n  method?: HTTPMethod;\n  path?: string;\n  query?: Req | undefined;\n  body?: Req | null | undefined;\n  headers?: Headers | undefined;\n\n  maxRetries?: number;\n  stream?: boolean | undefined;\n  timeout?: number;\n  httpAgent?: Agent;\n  signal?: AbortSignal | undefined | null;\n  idempotencyKey?: string;\n\n  __binaryRequest?: boolean | undefined;\n  __binaryResponse?: boolean | undefined;\n};\n\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys: KeysEnum<RequestOptions> = {\n  method: true,\n  path: true,\n  query: true,\n  body: true,\n  headers: true,\n\n  maxRetries: true,\n  stream: true,\n  timeout: true,\n  httpAgent: true,\n  signal: true,\n  idempotencyKey: true,\n\n  __binaryRequest: true,\n  __binaryResponse: true,\n};\n\nexport const isRequestOptions = (obj: unknown): obj is RequestOptions => {\n  return (\n    typeof obj === 'object' &&\n    obj !== null &&\n    !isEmptyObj(obj) &&\n    Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k))\n  );\n};\n\nexport type FinalRequestOptions<Req = unknown | Record<string, unknown> | Readable | DataView> =\n  RequestOptions<Req> & {\n    method: HTTPMethod;\n    path: string;\n  };\n\ndeclare const Deno: any;\ndeclare const EdgeRuntime: any;\ntype Arch = 'x32' | 'x64' | 'arm' | 'arm64' | `other:${string}` | 'unknown';\ntype PlatformName =\n  | 'MacOS'\n  | 'Linux'\n  | 'Windows'\n  | 'FreeBSD'\n  | 'OpenBSD'\n  | 'iOS'\n  | 'Android'\n  | `Other:${string}`\n  | 'Unknown';\ntype Browser = 'ie' | 'edge' | 'chrome' | 'firefox' | 'safari';\ntype PlatformProperties = {\n  'X-Stainless-Lang': 'js';\n  'X-Stainless-Package-Version': string;\n  'X-Stainless-OS': PlatformName;\n  'X-Stainless-Arch': Arch;\n  'X-Stainless-Runtime': 'node' | 'deno' | 'edge' | `browser:${Browser}` | 'unknown';\n  'X-Stainless-Runtime-Version': string;\n};\nconst getPlatformProperties = (): PlatformProperties => {\n  if (typeof Deno !== 'undefined' && Deno.build != null) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(Deno.build.os),\n      'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n      'X-Stainless-Runtime': 'deno',\n      'X-Stainless-Runtime-Version':\n        typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown',\n    };\n  }\n  if (typeof EdgeRuntime !== 'undefined') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': `other:${EdgeRuntime}`,\n      'X-Stainless-Runtime': 'edge',\n      'X-Stainless-Runtime-Version': process.version,\n    };\n  }\n  // Check if Node.js\n  if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(process.platform),\n      'X-Stainless-Arch': normalizeArch(process.arch),\n      'X-Stainless-Runtime': 'node',\n      'X-Stainless-Runtime-Version': process.version,\n    };\n  }\n\n  const browserInfo = getBrowserInfo();\n  if (browserInfo) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': 'unknown',\n      'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n      'X-Stainless-Runtime-Version': browserInfo.version,\n    };\n  }\n\n  // TODO add support for Cloudflare workers, etc.\n  return {\n    'X-Stainless-Lang': 'js',\n    'X-Stainless-Package-Version': VERSION,\n    'X-Stainless-OS': 'Unknown',\n    'X-Stainless-Arch': 'unknown',\n    'X-Stainless-Runtime': 'unknown',\n    'X-Stainless-Runtime-Version': 'unknown',\n  };\n};\n\ntype BrowserInfo = {\n  browser: Browser;\n  version: string;\n};\n\ndeclare const navigator: { userAgent: string } | undefined;\n\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo(): BrowserInfo | null {\n  if (typeof navigator === 'undefined' || !navigator) {\n    return null;\n  }\n\n  // NOTE: The order matters here!\n  const browserPatterns = [\n    { key: 'edge' as const, pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'ie' as const, pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'ie' as const, pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'chrome' as const, pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'firefox' as const, pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'safari' as const, pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n  ];\n\n  // Find the FIRST matching browser\n  for (const { key, pattern } of browserPatterns) {\n    const match = pattern.exec(navigator.userAgent);\n    if (match) {\n      const major = match[1] || 0;\n      const minor = match[2] || 0;\n      const patch = match[3] || 0;\n\n      return { browser: key, version: `${major}.${minor}.${patch}` };\n    }\n  }\n\n  return null;\n}\n\nconst normalizeArch = (arch: string): Arch => {\n  // Node docs:\n  // - https://nodejs.org/api/process.html#processarch\n  // Deno docs:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  if (arch === 'x32') return 'x32';\n  if (arch === 'x86_64' || arch === 'x64') return 'x64';\n  if (arch === 'arm') return 'arm';\n  if (arch === 'aarch64' || arch === 'arm64') return 'arm64';\n  if (arch) return `other:${arch}`;\n  return 'unknown';\n};\n\nconst normalizePlatform = (platform: string): PlatformName => {\n  // Node platforms:\n  // - https://nodejs.org/api/process.html#processplatform\n  // Deno platforms:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  // - https://github.com/denoland/deno/issues/14799\n\n  platform = platform.toLowerCase();\n\n  // NOTE: this iOS check is untested and may not work\n  // Node does not work natively on IOS, there is a fork at\n  // https://github.com/nodejs-mobile/nodejs-mobile\n  // however it is unknown at the time of writing how to detect if it is running\n  if (platform.includes('ios')) return 'iOS';\n  if (platform === 'android') return 'Android';\n  if (platform === 'darwin') return 'MacOS';\n  if (platform === 'win32') return 'Windows';\n  if (platform === 'freebsd') return 'FreeBSD';\n  if (platform === 'openbsd') return 'OpenBSD';\n  if (platform === 'linux') return 'Linux';\n  if (platform) return `Other:${platform}`;\n  return 'Unknown';\n};\n\nlet _platformHeaders: PlatformProperties;\nconst getPlatformHeaders = () => {\n  return (_platformHeaders ??= getPlatformProperties());\n};\n\nexport const safeJSON = (text: string) => {\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    return undefined;\n  }\n};\n\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nconst isAbsoluteURL = (url: string): boolean => {\n  return startsWithSchemeRegexp.test(url);\n};\n\nexport const sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst validatePositiveInteger = (name: string, n: unknown): number => {\n  if (typeof n !== 'number' || !Number.isInteger(n)) {\n    throw new TerminalError(`${name} must be an integer`);\n  }\n  if (n < 0) {\n    throw new TerminalError(`${name} must be a positive integer`);\n  }\n  return n;\n};\n\nexport const castToError = (err: any): Error => {\n  if (err instanceof Error) return err;\n  if (typeof err === 'object' && err !== null) {\n    try {\n      return new Error(JSON.stringify(err));\n    } catch {}\n  }\n  return new Error(err);\n};\n\nexport const ensurePresent = <T>(value: T | null | undefined): T => {\n  if (value == null) throw new TerminalError(`Expected a value to be given but received ${value} instead.`);\n  return value;\n};\n\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env: string): string | undefined => {\n  if (typeof process !== 'undefined') {\n    return process.env?.[env]?.trim() ?? undefined;\n  }\n  if (typeof Deno !== 'undefined') {\n    return Deno.env?.get?.(env)?.trim();\n  }\n  return undefined;\n};\n\nexport const coerceInteger = (value: unknown): number => {\n  if (typeof value === 'number') return Math.round(value);\n  if (typeof value === 'string') return parseInt(value, 10);\n\n  throw new TerminalError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\n\nexport const coerceFloat = (value: unknown): number => {\n  if (typeof value === 'number') return value;\n  if (typeof value === 'string') return parseFloat(value);\n\n  throw new TerminalError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\n\nexport const coerceBoolean = (value: unknown): boolean => {\n  if (typeof value === 'boolean') return value;\n  if (typeof value === 'string') return value === 'true';\n  return Boolean(value);\n};\n\nexport const maybeCoerceInteger = (value: unknown): number | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceInteger(value);\n};\n\nexport const maybeCoerceFloat = (value: unknown): number | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceFloat(value);\n};\n\nexport const maybeCoerceBoolean = (value: unknown): boolean | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceBoolean(value);\n};\n\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj: Object | null | undefined): boolean {\n  if (!obj) return true;\n  for (const _k in obj) return false;\n  return true;\n}\n\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj: Object, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\n/**\n * Copies headers from \"newHeaders\" onto \"targetHeaders\",\n * using lower-case for all properties,\n * ignoring any keys with undefined values,\n * and deleting any keys with null values.\n */\nfunction applyHeadersMut(targetHeaders: Headers, newHeaders: Headers): void {\n  for (const k in newHeaders) {\n    if (!hasOwn(newHeaders, k)) continue;\n    const lowerKey = k.toLowerCase();\n    if (!lowerKey) continue;\n\n    const val = newHeaders[k];\n\n    if (val === null) {\n      delete targetHeaders[lowerKey];\n    } else if (val !== undefined) {\n      targetHeaders[lowerKey] = val;\n    }\n  }\n}\n\nexport function debug(action: string, ...args: any[]) {\n  if (typeof process !== 'undefined' && process?.env?.['DEBUG'] === 'true') {\n    console.log(`Terminal:DEBUG:${action}`, ...args);\n  }\n}\n\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport const isRunningInBrowser = () => {\n  return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n    // @ts-ignore\n    typeof window.document !== 'undefined' &&\n    // @ts-ignore\n    typeof navigator !== 'undefined'\n  );\n};\n\nexport interface HeadersProtocol {\n  get: (header: string) => string | null | undefined;\n}\nexport type HeadersLike = Record<string, string | string[] | undefined> | HeadersProtocol;\n\nexport const isHeadersProtocol = (headers: any): headers is HeadersProtocol => {\n  return typeof headers?.get === 'function';\n};\n\nexport const getRequiredHeader = (headers: HeadersLike | Headers, header: string): string => {\n  const foundHeader = getHeader(headers, header);\n  if (foundHeader === undefined) {\n    throw new Error(`Could not find ${header} header`);\n  }\n  return foundHeader;\n};\n\nexport const getHeader = (headers: HeadersLike | Headers, header: string): string | undefined => {\n  const lowerCasedHeader = header.toLowerCase();\n  if (isHeadersProtocol(headers)) {\n    // to deal with the case where the header looks like Stainless-Event-Id\n    const intercapsHeader =\n      header[0]?.toUpperCase() +\n      header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2) => g1 + g2.toUpperCase());\n    for (const key of [header, lowerCasedHeader, header.toUpperCase(), intercapsHeader]) {\n      const value = headers.get(key);\n      if (value) {\n        return value;\n      }\n    }\n  }\n\n  for (const [key, value] of Object.entries(headers)) {\n    if (key.toLowerCase() === lowerCasedHeader) {\n      if (Array.isArray(value)) {\n        if (value.length <= 1) return value[0];\n        console.warn(`Received ${value.length} entries for the ${header} header, using the first entry.`);\n        return value[0];\n      }\n      return value;\n    }\n  }\n\n  return undefined;\n};\n\n/**\n * Encodes a string to Base64 format.\n */\nexport const toBase64 = (str: string | null | undefined): string => {\n  if (!str) return '';\n  if (typeof Buffer !== 'undefined') {\n    return Buffer.from(str).toString('base64');\n  }\n\n  if (typeof btoa !== 'undefined') {\n    return btoa(str);\n  }\n\n  throw new TerminalError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\n\nexport function isObj(obj: unknown): obj is Record<string, unknown> {\n  return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport type { Terminal } from './index';\n\nexport class APIResource {\n  protected _client: Terminal;\n\n  constructor(client: Terminal) {\n    this._client = client;\n  }\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../resource';\nimport * as Core from '../core';\n\nexport class AddressResource extends APIResource {\n  /**\n   * Create and add a shipping address to the current user.\n   */\n  create(body: AddressCreateParams, options?: Core.RequestOptions): Core.APIPromise<AddressCreateResponse> {\n    return this._client.post('/address', { body, ...options });\n  }\n\n  /**\n   * Get the shipping addresses associated with the current user.\n   */\n  list(options?: Core.RequestOptions): Core.APIPromise<AddressListResponse> {\n    return this._client.get('/address', options);\n  }\n\n  /**\n   * Delete a shipping address from the current user.\n   */\n  delete(id: string, options?: Core.RequestOptions): Core.APIPromise<AddressDeleteResponse> {\n    return this._client.delete(`/address/${id}`, options);\n  }\n}\n\n/**\n * Physical address associated with a Terminal shop user.\n */\nexport interface Address {\n  /**\n   * Unique object identifier. The format and length of IDs may change over time.\n   */\n  id: string;\n\n  /**\n   * City of the address.\n   */\n  city: string;\n\n  /**\n   * ISO 3166-1 alpha-2 country code of the address.\n   */\n  country: string;\n\n  /**\n   * The recipient's name.\n   */\n  name: string;\n\n  /**\n   * Street of the address.\n   */\n  street1: string;\n\n  /**\n   * Zip code of the address.\n   */\n  zip: string;\n\n  /**\n   * Phone number of the recipient.\n   */\n  phone?: string;\n\n  /**\n   * Province or state of the address.\n   */\n  province?: string;\n\n  /**\n   * Apartment, suite, etc. of the address.\n   */\n  street2?: string;\n}\n\nexport interface AddressCreateResponse {\n  /**\n   * Shipping address ID.\n   */\n  data: string;\n}\n\nexport interface AddressListResponse {\n  /**\n   * Shipping addresses.\n   */\n  data: Array<Address>;\n}\n\nexport interface AddressDeleteResponse {\n  data: 'ok';\n}\n\nexport interface AddressCreateParams {\n  /**\n   * City of the address.\n   */\n  city: string;\n\n  /**\n   * ISO 3166-1 alpha-2 country code of the address.\n   */\n  country: string;\n\n  /**\n   * The recipient's name.\n   */\n  name: string;\n\n  /**\n   * Street of the address.\n   */\n  street1: string;\n\n  /**\n   * Zip code of the address.\n   */\n  zip: string;\n\n  /**\n   * Phone number of the recipient.\n   */\n  phone?: string;\n\n  /**\n   * Province or state of the address.\n   */\n  province?: string;\n\n  /**\n   * Apartment, suite, etc. of the address.\n   */\n  street2?: string;\n}\n\nexport declare namespace AddressResource {\n  export {\n    type Address as Address,\n    type AddressCreateResponse as AddressCreateResponse,\n    type AddressListResponse as AddressListResponse,\n    type AddressDeleteResponse as AddressDeleteResponse,\n    type AddressCreateParams as AddressCreateParams,\n  };\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../resource';\nimport * as Core from '../core';\n\nexport class AppResource extends APIResource {\n  /**\n   * Create an app.\n   */\n  create(body: AppCreateParams, options?: Core.RequestOptions): Core.APIPromise<AppCreateResponse> {\n    return this._client.post('/app', { body, ...options });\n  }\n\n  /**\n   * List the current user's registered apps.\n   */\n  list(options?: Core.RequestOptions): Core.APIPromise<AppListResponse> {\n    return this._client.get('/app', options);\n  }\n\n  /**\n   * Delete the app with the given ID.\n   */\n  delete(id: string, options?: Core.RequestOptions): Core.APIPromise<AppDeleteResponse> {\n    return this._client.delete(`/app/${id}`, options);\n  }\n\n  /**\n   * Get the app with the given ID.\n   */\n  get(id: string, options?: Core.RequestOptions): Core.APIPromise<AppGetResponse> {\n    return this._client.get(`/app/${id}`, options);\n  }\n}\n\n/**\n * A Terminal App used for configuring an OAuth 2.0 client.\n */\nexport interface App {\n  /**\n   * Unique object identifier. The format and length of IDs may change over time.\n   */\n  id: string;\n\n  /**\n   * Name of the app.\n   */\n  name: string;\n\n  /**\n   * Redirect URI of the app.\n   */\n  redirectURI: string;\n}\n\nexport interface AppCreateResponse {\n  data: AppCreateResponse.Data;\n}\n\nexport namespace AppCreateResponse {\n  export interface Data {\n    /**\n     * OAuth 2.0 client ID.\n     */\n    id: string;\n\n    /**\n     * OAuth 2.0 client secret.\n     */\n    secret: string;\n  }\n}\n\nexport interface AppListResponse {\n  /**\n   * List of apps.\n   */\n  data: Array<App>;\n}\n\nexport interface AppDeleteResponse {\n  data: 'ok';\n}\n\nexport interface AppGetResponse {\n  /**\n   * A Terminal App used for configuring an OAuth 2.0 client.\n   */\n  data: App;\n}\n\nexport interface AppCreateParams {\n  /**\n   * Unique object identifier. The format and length of IDs may change over time.\n   */\n  id: string;\n\n  /**\n   * Name of the app.\n   */\n  name: string;\n\n  /**\n   * Redirect URI of the app.\n   */\n  redirectURI: string;\n}\n\nexport declare namespace AppResource {\n  export {\n    type App as App,\n    type AppCreateResponse as AppCreateResponse,\n    type AppListResponse as AppListResponse,\n    type AppDeleteResponse as AppDeleteResponse,\n    type AppGetResponse as AppGetResponse,\n    type AppCreateParams as AppCreateParams,\n  };\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../resource';\nimport * as Core from '../core';\n\nexport class CardResource extends APIResource {\n  /**\n   * Attach a credit card (tokenized via Stripe) to the current user.\n   */\n  create(body: CardCreateParams, options?: Core.RequestOptions): Core.APIPromise<CardCreateResponse> {\n    return this._client.post('/card', { body, ...options });\n  }\n\n  /**\n   * List the credit cards associated with the current user.\n   */\n  list(options?: Core.RequestOptions): Core.APIPromise<CardListResponse> {\n    return this._client.get('/card', options);\n  }\n\n  /**\n   * Delete a credit card associated with the current user.\n   */\n  delete(id: string, options?: Core.RequestOptions): Core.APIPromise<CardDeleteResponse> {\n    return this._client.delete(`/card/${id}`, options);\n  }\n}\n\n/**\n * Credit card used for payments in the Terminal shop.\n */\nexport interface Card {\n  /**\n   * Unique object identifier. The format and length of IDs may change over time.\n   */\n  id: string;\n\n  /**\n   * Brand of the card.\n   */\n  brand: string;\n\n  /**\n   * Expiration of the card.\n   */\n  expiration: Card.Expiration;\n\n  /**\n   * Last four digits of the card.\n   */\n  last4: string;\n}\n\nexport namespace Card {\n  /**\n   * Expiration of the card.\n   */\n  export interface Expiration {\n    /**\n     * Expiration month of the card.\n     */\n    month: number;\n\n    /**\n     * Expiration year of the card.\n     */\n    year: number;\n  }\n}\n\nexport interface CardCreateResponse {\n  /**\n   * ID of the card.\n   */\n  data: string;\n}\n\nexport interface CardListResponse {\n  /**\n   * List of cards associated with the user.\n   */\n  data: Array<Card>;\n}\n\nexport interface CardDeleteResponse {\n  data: 'ok';\n}\n\nexport interface CardCreateParams {\n  /**\n   * Stripe card token. Learn how to\n   * [create one here](https://docs.stripe.com/api/tokens/create_card).\n   */\n  token: string;\n}\n\nexport declare namespace CardResource {\n  export {\n    type Card as Card,\n    type CardCreateResponse as CardCreateResponse,\n    type CardListResponse as CardListResponse,\n    type CardDeleteResponse as CardDeleteResponse,\n    type CardCreateParams as CardCreateParams,\n  };\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../resource';\nimport * as Core from '../core';\nimport * as OrderAPI from './order';\n\nexport class CartResource extends APIResource {\n  /**\n   * Convert the current user's cart to an order.\n   */\n  convert(options?: Core.RequestOptions): Core.APIPromise<CartConvertResponse> {\n    return this._client.post('/cart/convert', options);\n  }\n\n  /**\n   * Get the current user's cart.\n   */\n  get(options?: Core.RequestOptions): Core.APIPromise<CartGetResponse> {\n    return this._client.get('/cart', options);\n  }\n\n  /**\n   * Set the shipping address for the current user's cart.\n   */\n  setAddress(\n    body: CartSetAddressParams,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<CartSetAddressResponse> {\n    return this._client.put('/cart/address', { body, ...options });\n  }\n\n  /**\n   * Set the credit card for the current user's cart.\n   */\n  setCard(body: CartSetCardParams, options?: Core.RequestOptions): Core.APIPromise<CartSetCardResponse> {\n    return this._client.put('/cart/card', { body, ...options });\n  }\n\n  /**\n   * Add an item to the current user's cart.\n   */\n  setItem(body: CartSetItemParams, options?: Core.RequestOptions): Core.APIPromise<CartSetItemResponse> {\n    return this._client.put('/cart/item', { body, ...options });\n  }\n}\n\n/**\n * The current Terminal shop user's cart.\n */\nexport interface Cart {\n  /**\n   * The subtotal and shipping amounts for the current user's cart.\n   */\n  amount: Cart.Amount;\n\n  /**\n   * An array of items in the current user's cart.\n   */\n  items: Array<Cart.Item>;\n\n  /**\n   * The subtotal of all items in the current user's cart, in cents (USD).\n   */\n  subtotal: number;\n\n  /**\n   * ID of the shipping address selected on the current user's cart.\n   */\n  addressID?: string;\n\n  /**\n   * ID of the card selected on the current user's cart.\n   */\n  cardID?: string;\n\n  /**\n   * Shipping information for the current user's cart.\n   */\n  shipping?: Cart.Shipping;\n}\n\nexport namespace Cart {\n  /**\n   * The subtotal and shipping amounts for the current user's cart.\n   */\n  export interface Amount {\n    /**\n     * Subtotal of the current user's cart, in cents (USD).\n     */\n    subtotal: number;\n\n    /**\n     * Shipping amount of the current user's cart, in cents (USD).\n     */\n    shipping?: number;\n  }\n\n  /**\n   * An item in the current Terminal shop user's cart.\n   */\n  export interface Item {\n    /**\n     * Unique object identifier. The format and length of IDs may change over time.\n     */\n    id: string;\n\n    /**\n     * ID of the product variant for this item in the current user's cart.\n     */\n    productVariantID: string;\n\n    /**\n     * Quantity of the item in the current user's cart.\n     */\n    quantity: number;\n\n    /**\n     * Subtotal of the item in the current user's cart, in cents (USD).\n     */\n    subtotal: number;\n  }\n\n  /**\n   * Shipping information for the current user's cart.\n   */\n  export interface Shipping {\n    /**\n     * Shipping service name.\n     */\n    service?: string;\n\n    /**\n     * Shipping timeframe provided by the shipping carrier.\n     */\n    timeframe?: string;\n  }\n}\n\nexport interface CartConvertResponse {\n  /**\n   * An order from the Terminal shop.\n   */\n  data: OrderAPI.Order;\n}\n\nexport interface CartGetResponse {\n  /**\n   * The current Terminal shop user's cart.\n   */\n  data: Cart;\n}\n\nexport interface CartSetAddressResponse {\n  data: 'ok';\n}\n\nexport interface CartSetCardResponse {\n  data: 'ok';\n}\n\nexport interface CartSetItemResponse {\n  /**\n   * The current Terminal shop user's cart.\n   */\n  data: Cart;\n}\n\nexport interface CartSetAddressParams {\n  /**\n   * ID of the shipping address to set for the current user's cart.\n   */\n  addressID: string;\n}\n\nexport interface CartSetCardParams {\n  /**\n   * ID of the credit card to set for the current user's cart.\n   */\n  cardID: string;\n}\n\nexport interface CartSetItemParams {\n  /**\n   * ID of the product variant to add to the cart.\n   */\n  productVariantID: string;\n\n  /**\n   * Quantity of the item to add to the cart.\n   */\n  quantity: number;\n}\n\nexport declare namespace CartResource {\n  export {\n    type Cart as Cart,\n    type CartConvertResponse as CartConvertResponse,\n    type CartGetResponse as CartGetResponse,\n    type CartSetAddressResponse as CartSetAddressResponse,\n    type CartSetCardResponse as CartSetCardResponse,\n    type CartSetItemResponse as CartSetItemResponse,\n    type CartSetAddressParams as CartSetAddressParams,\n    type CartSetCardParams as CartSetCardParams,\n    type CartSetItemParams as CartSetItemParams,\n  };\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../resource';\nimport * as Core from '../core';\n\nexport class Email extends APIResource {\n  /**\n   * Subscribe to email updates from Terminal.\n   */\n  create(body: EmailCreateParams, options?: Core.RequestOptions): Core.APIPromise<EmailCreateResponse> {\n    return this._client.post('/email', { body, ...options });\n  }\n}\n\nexport interface EmailCreateResponse {\n  data: 'ok';\n}\n\nexport interface EmailCreateParams {\n  /**\n   * Email address to subscribe to Terminal updates with.\n   */\n  email: string;\n}\n\nexport declare namespace Email {\n  export { type EmailCreateResponse as EmailCreateResponse, type EmailCreateParams as EmailCreateParams };\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../resource';\nimport * as Core from '../core';\n\nexport class OrderResource extends APIResource {\n  /**\n   * List the orders associated with the current user.\n   */\n  list(options?: Core.RequestOptions): Core.APIPromise<OrderListResponse> {\n    return this._client.get('/order', options);\n  }\n\n  /**\n   * Get the order with the given ID.\n   */\n  get(id: string, options?: Core.RequestOptions): Core.APIPromise<OrderGetResponse> {\n    return this._client.get(`/order/${id}`, options);\n  }\n}\n\n/**\n * An order from the Terminal shop.\n */\nexport interface Order {\n  /**\n   * Unique object identifier. The format and length of IDs may change over time.\n   */\n  id: string;\n\n  /**\n   * The subtotal and shipping amounts of the order.\n   */\n  amount: Order.Amount;\n\n  /**\n   * Items in the order.\n   */\n  items: Array<Order.Item>;\n\n  /**\n   * Shipping address of the order.\n   */\n  shipping: Order.Shipping;\n\n  /**\n   * Tracking information of the order.\n   */\n  tracking: Order.Tracking;\n\n  /**\n   * Zero-based index of the order for this user only.\n   */\n  index?: number;\n}\n\nexport namespace Order {\n  /**\n   * The subtotal and shipping amounts of the order.\n   */\n  export interface Amount {\n    /**\n     * Shipping amount of the order, in cents (USD).\n     */\n    shipping: number;\n\n    /**\n     * Subtotal amount of the order, in cents (USD).\n     */\n    subtotal: number;\n  }\n\n  export interface Item {\n    /**\n     * Unique object identifier. The format and length of IDs may change over time.\n     */\n    id: string;\n\n    /**\n     * Amount of the item in the order, in cents (USD).\n     */\n    amount: number;\n\n    /**\n     * Quantity of the item in the order.\n     */\n    quantity: number;\n\n    /**\n     * Description of the item in the order.\n     */\n    description?: string;\n\n    /**\n     * ID of the product variant of the item in the order.\n     */\n    productVariantID?: string;\n  }\n\n  /**\n   * Shipping address of the order.\n   */\n  export interface Shipping {\n    /**\n     * City of the address.\n     */\n    city: string;\n\n    /**\n     * ISO 3166-1 alpha-2 country code of the address.\n     */\n    country: string;\n\n    /**\n     * The recipient's name.\n     */\n    name: string;\n\n    /**\n     * Street of the address.\n     */\n    street1: string;\n\n    /**\n     * Zip code of the address.\n     */\n    zip: string;\n\n    /**\n     * Phone number of the recipient.\n     */\n    phone?: string;\n\n    /**\n     * Province or state of the address.\n     */\n    province?: string;\n\n    /**\n     * Apartment, suite, etc. of the address.\n     */\n    street2?: string;\n  }\n\n  /**\n   * Tracking information of the order.\n   */\n  export interface Tracking {\n    /**\n     * Tracking number of the order.\n     */\n    number?: string;\n\n    /**\n     * Shipping service of the order.\n     */\n    service?: string;\n\n    /**\n     * Tracking URL of the order.\n     */\n    url?: string;\n  }\n}\n\nexport interface OrderListResponse {\n  /**\n   * List of orders.\n   */\n  data: Array<Order>;\n}\n\nexport interface OrderGetResponse {\n  /**\n   * An order from the Terminal shop.\n   */\n  data: Order;\n}\n\nexport declare namespace OrderResource {\n  export {\n    type Order as Order,\n    type OrderListResponse as OrderListResponse,\n    type OrderGetResponse as OrderGetResponse,\n  };\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../resource';\nimport * as Core from '../core';\n\nexport class ProductResource extends APIResource {\n  /**\n   * List all products for sale in the Terminal shop.\n   */\n  list(options?: Core.RequestOptions): Core.APIPromise<ProductListResponse> {\n    return this._client.get('/product', options);\n  }\n}\n\n/**\n * Product sold in the Terminal shop.\n */\nexport interface Product {\n  /**\n   * Unique object identifier. The format and length of IDs may change over time.\n   */\n  id: string;\n\n  /**\n   * Description of the product.\n   */\n  description: string;\n\n  /**\n   * Name of the product.\n   */\n  name: string;\n\n  /**\n   * List of variants of the product.\n   */\n  variants: Array<ProductVariant>;\n\n  /**\n   * Order of the product used when displaying a sorted list of products.\n   */\n  order?: number;\n\n  /**\n   * Whether the product must be or can be subscribed to.\n   */\n  subscription?: 'allowed' | 'required';\n\n  /**\n   * Tags for the product.\n   */\n  tags?: Record<string, string>;\n}\n\n/**\n * Variant of a product in the Terminal shop.\n */\nexport interface ProductVariant {\n  /**\n   * Unique object identifier. The format and length of IDs may change over time.\n   */\n  id: string;\n\n  /**\n   * Name of the product variant.\n   */\n  name: string;\n\n  /**\n   * Price of the product variant in cents (USD).\n   */\n  price: number;\n}\n\nexport interface ProductListResponse {\n  /**\n   * A list of products.\n   */\n  data: Array<Product>;\n}\n\nexport declare namespace ProductResource {\n  export {\n    type Product as Product,\n    type ProductVariant as ProductVariant,\n    type ProductListResponse as ProductListResponse,\n  };\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../resource';\nimport { isRequestOptions } from '../core';\nimport * as Core from '../core';\n\nexport class ProfileResource extends APIResource {\n  /**\n   * Update the current user's profile.\n   */\n  update(body?: ProfileUpdateParams, options?: Core.RequestOptions): Core.APIPromise<ProfileUpdateResponse>;\n  update(options?: Core.RequestOptions): Core.APIPromise<ProfileUpdateResponse>;\n  update(\n    body: ProfileUpdateParams | Core.RequestOptions = {},\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<ProfileUpdateResponse> {\n    if (isRequestOptions(body)) {\n      return this.update({}, body);\n    }\n    return this._client.put('/profile', { body, ...options });\n  }\n\n  /**\n   * Get the current user's profile.\n   */\n  me(options?: Core.RequestOptions): Core.APIPromise<ProfileMeResponse> {\n    return this._client.get('/profile', options);\n  }\n}\n\n/**\n * A Terminal shop user's profile. (We have users, btw.)\n */\nexport interface Profile {\n  /**\n   * A Terminal shop user. (We have users, btw.)\n   */\n  user: Profile.User;\n}\n\nexport namespace Profile {\n  /**\n   * A Terminal shop user. (We have users, btw.)\n   */\n  export interface User {\n    /**\n     * Unique object identifier. The format and length of IDs may change over time.\n     */\n    id: string;\n\n    /**\n     * Email address of the user.\n     */\n    email: string | null;\n\n    /**\n     * The user's fingerprint, derived from their public SSH key.\n     */\n    fingerprint: string | null;\n\n    /**\n     * Name of the user.\n     */\n    name: string | null;\n\n    /**\n     * Stripe customer ID of the user.\n     */\n    stripeCustomerID: string;\n  }\n}\n\nexport interface ProfileUpdateResponse {\n  /**\n   * A Terminal shop user's profile. (We have users, btw.)\n   */\n  data: Profile;\n}\n\nexport interface ProfileMeResponse {\n  /**\n   * A Terminal shop user's profile. (We have users, btw.)\n   */\n  data: Profile;\n}\n\nexport interface ProfileUpdateParams {\n  /**\n   * Email address of the user.\n   */\n  email?: string | null;\n\n  /**\n   * Name of the user.\n   */\n  name?: string | null;\n}\n\nexport declare namespace ProfileResource {\n  export {\n    type Profile as Profile,\n    type ProfileUpdateResponse as ProfileUpdateResponse,\n    type ProfileMeResponse as ProfileMeResponse,\n    type ProfileUpdateParams as ProfileUpdateParams,\n  };\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../resource';\nimport * as Core from '../core';\n\nexport class SubscriptionResource extends APIResource {\n  /**\n   * Create a subscription for the current user.\n   */\n  create(\n    body: SubscriptionCreateParams,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<SubscriptionCreateResponse> {\n    return this._client.post('/subscription', { body, ...options });\n  }\n\n  /**\n   * List the subscriptions associated with the current user.\n   */\n  list(options?: Core.RequestOptions): Core.APIPromise<SubscriptionListResponse> {\n    return this._client.get('/subscription', options);\n  }\n\n  /**\n   * Cancel a subscription for the current user.\n   */\n  delete(id: string, options?: Core.RequestOptions): Core.APIPromise<SubscriptionDeleteResponse> {\n    return this._client.delete(`/subscription/${id}`, options);\n  }\n}\n\n/**\n * Subscription to a Terminal shop product.\n */\nexport interface Subscription {\n  /**\n   * Unique object identifier. The format and length of IDs may change over time.\n   */\n  id: string;\n\n  /**\n   * ID of the shipping address used for the subscription.\n   */\n  addressID: string;\n\n  /**\n   * ID of the card used for the subscription.\n   */\n  cardID: string;\n\n  /**\n   * Frequency of the subscription.\n   */\n  frequency: 'fixed' | 'daily' | 'weekly' | 'monthly' | 'yearly';\n\n  /**\n   * ID of the product variant being subscribed to.\n   */\n  productVariantID: string;\n\n  /**\n   * Quantity of the subscription.\n   */\n  quantity: number;\n}\n\nexport interface SubscriptionCreateResponse {\n  data: 'ok';\n}\n\nexport interface SubscriptionListResponse {\n  /**\n   * List of subscriptions.\n   */\n  data: Array<Subscription>;\n}\n\nexport interface SubscriptionDeleteResponse {\n  data: 'ok';\n}\n\nexport interface SubscriptionCreateParams {\n  /**\n   * Unique object identifier. The format and length of IDs may change over time.\n   */\n  id: string;\n\n  /**\n   * ID of the shipping address used for the subscription.\n   */\n  addressID: string;\n\n  /**\n   * ID of the card used for the subscription.\n   */\n  cardID: string;\n\n  /**\n   * Frequency of the subscription.\n   */\n  frequency: 'fixed' | 'daily' | 'weekly' | 'monthly' | 'yearly';\n\n  /**\n   * ID of the product variant being subscribed to.\n   */\n  productVariantID: string;\n\n  /**\n   * Quantity of the subscription.\n   */\n  quantity: number;\n}\n\nexport declare namespace SubscriptionResource {\n  export {\n    type Subscription as Subscription,\n    type SubscriptionCreateResponse as SubscriptionCreateResponse,\n    type SubscriptionListResponse as SubscriptionListResponse,\n    type SubscriptionDeleteResponse as SubscriptionDeleteResponse,\n    type SubscriptionCreateParams as SubscriptionCreateParams,\n  };\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../resource';\nimport * as Core from '../core';\n\nexport class TokenResource extends APIResource {\n  /**\n   * Create a personal access token.\n   */\n  create(options?: Core.RequestOptions): Core.APIPromise<TokenCreateResponse> {\n    return this._client.post('/token', options);\n  }\n\n  /**\n   * List the current user's personal access tokens.\n   */\n  list(options?: Core.RequestOptions): Core.APIPromise<TokenListResponse> {\n    return this._client.get('/token', options);\n  }\n\n  /**\n   * Delete the personal access token with the given ID.\n   */\n  delete(id: string, options?: Core.RequestOptions): Core.APIPromise<TokenDeleteResponse> {\n    return this._client.delete(`/token/${id}`, options);\n  }\n\n  /**\n   * Get the personal token with the given ID.\n   */\n  get(id: string, options?: Core.RequestOptions): Core.APIPromise<TokenGetResponse> {\n    return this._client.get(`/token/${id}`, options);\n  }\n}\n\n/**\n * A personal access token used to access the Terminal API. If you leak this,\n * expect large sums of coffee to be ordered on your credit card.\n */\nexport interface Token {\n  /**\n   * Unique object identifier. The format and length of IDs may change over time.\n   */\n  id: string;\n\n  /**\n   * Personal access token (obfuscated).\n   */\n  token: string;\n\n  /**\n   * Relevant timestamps for the token.\n   */\n  time: Token.Time;\n}\n\nexport namespace Token {\n  /**\n   * Relevant timestamps for the token.\n   */\n  export interface Time {\n    /**\n     * The created time for the token.\n     */\n    created: string;\n  }\n}\n\nexport interface TokenCreateResponse {\n  data: TokenCreateResponse.Data;\n}\n\nexport namespace TokenCreateResponse {\n  export interface Data {\n    /**\n     * Personal token ID.\n     */\n    id: string;\n\n    /**\n     * Personal access token. Include this in the Authorization header\n     * (`Bearer <token>`) when accessing the Terminal API.\n     */\n    token: string;\n  }\n}\n\nexport interface TokenListResponse {\n  /**\n   * List of personal access tokens.\n   */\n  data: Array<Token>;\n}\n\nexport interface TokenDeleteResponse {\n  data: 'ok';\n}\n\nexport interface TokenGetResponse {\n  /**\n   * A personal access token used to access the Terminal API. If you leak this,\n   * expect large sums of coffee to be ordered on your credit card.\n   */\n  data: Token;\n}\n\nexport declare namespace TokenResource {\n  export {\n    type Token as Token,\n    type TokenCreateResponse as TokenCreateResponse,\n    type TokenListResponse as TokenListResponse,\n    type TokenDeleteResponse as TokenDeleteResponse,\n    type TokenGetResponse as TokenGetResponse,\n  };\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../resource';\nimport * as Core from '../core';\nimport * as AddressAPI from './address';\nimport * as CardAPI from './card';\nimport * as CartAPI from './cart';\nimport * as OrderAPI from './order';\nimport * as ProductAPI from './product';\nimport * as ProfileAPI from './profile';\nimport * as SubscriptionAPI from './subscription';\n\nexport class View extends APIResource {\n  /**\n   * Get initial app data, including user, products, cart, addresses, cards,\n   * subscriptions, and orders.\n   */\n  init(options?: Core.RequestOptions): Core.APIPromise<ViewInitResponse> {\n    return this._client.get('/view/init', options);\n  }\n}\n\nexport interface ViewInitResponse {\n  /**\n   * Initial app data.\n   */\n  data: ViewInitResponse.Data;\n}\n\nexport namespace ViewInitResponse {\n  /**\n   * Initial app data.\n   */\n  export interface Data {\n    addresses: Array<AddressAPI.Address>;\n\n    cards: Array<CardAPI.Card>;\n\n    /**\n     * The current Terminal shop user's cart.\n     */\n    cart: CartAPI.Cart;\n\n    orders: Array<OrderAPI.Order>;\n\n    products: Array<ProductAPI.Product>;\n\n    /**\n     * A Terminal shop user's profile. (We have users, btw.)\n     */\n    profile: ProfileAPI.Profile;\n\n    subscriptions: Array<SubscriptionAPI.Subscription>;\n  }\n}\n\nexport declare namespace View {\n  export { type ViewInitResponse as ViewInitResponse };\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { type Agent } from './_shims/index';\nimport * as Core from './core';\nimport * as Errors from './error';\nimport * as Uploads from './uploads';\nimport * as API from './resources/index';\nimport {\n  Address,\n  AddressCreateParams,\n  AddressCreateResponse,\n  AddressDeleteResponse,\n  AddressListResponse,\n  AddressResource,\n} from './resources/address';\nimport {\n  App,\n  AppCreateParams,\n  AppCreateResponse,\n  AppDeleteResponse,\n  AppGetResponse,\n  AppListResponse,\n  AppResource,\n} from './resources/app';\nimport {\n  Card,\n  CardCreateParams,\n  CardCreateResponse,\n  CardDeleteResponse,\n  CardListResponse,\n  CardResource,\n} from './resources/card';\nimport {\n  Cart,\n  CartConvertResponse,\n  CartGetResponse,\n  CartResource,\n  CartSetAddressParams,\n  CartSetAddressResponse,\n  CartSetCardParams,\n  CartSetCardResponse,\n  CartSetItemParams,\n  CartSetItemResponse,\n} from './resources/cart';\nimport { Email, EmailCreateParams, EmailCreateResponse } from './resources/email';\nimport { Order, OrderGetResponse, OrderListResponse, OrderResource } from './resources/order';\nimport { Product, ProductListResponse, ProductResource, ProductVariant } from './resources/product';\nimport {\n  Profile,\n  ProfileMeResponse,\n  ProfileResource,\n  ProfileUpdateParams,\n  ProfileUpdateResponse,\n} from './resources/profile';\nimport {\n  Subscription,\n  SubscriptionCreateParams,\n  SubscriptionCreateResponse,\n  SubscriptionDeleteResponse,\n  SubscriptionListResponse,\n  SubscriptionResource,\n} from './resources/subscription';\nimport {\n  Token,\n  TokenCreateResponse,\n  TokenDeleteResponse,\n  TokenGetResponse,\n  TokenListResponse,\n  TokenResource,\n} from './resources/token';\nimport { View, ViewInitResponse } from './resources/view';\n\nconst environments = {\n  production: 'https://api.terminal.shop/',\n  sandbox: 'https://sandbox.terminal.shop/',\n};\ntype Environment = keyof typeof environments;\nexport interface ClientOptions {\n  /**\n   * Defaults to process.env['TERMINAL_BEARER_TOKEN'].\n   */\n  bearerToken?: string | undefined;\n\n  /**\n   * Specifies the environment to use for the API.\n   *\n   * Each environment maps to a different base URL:\n   * - `production` corresponds to `https://api.terminal.shop/`\n   * - `sandbox` corresponds to `https://sandbox.terminal.shop/`\n   */\n  environment?: Environment;\n\n  /**\n   * Override the default base URL for the API, e.g., \"https://api.example.com/v2/\"\n   *\n   * Defaults to process.env['TERMINAL_BASE_URL'].\n   */\n  baseURL?: string | null | undefined;\n\n  /**\n   * The maximum amount of time (in milliseconds) that the client should wait for a response\n   * from the server before timing out a single request.\n   *\n   * Note that request timeouts are retried by default, so in a worst-case scenario you may wait\n   * much longer than this timeout before the promise succeeds or fails.\n   */\n  timeout?: number;\n\n  /**\n   * An HTTP agent used to manage HTTP(S) connections.\n   *\n   * If not provided, an agent will be constructed by default in the Node.js environment,\n   * otherwise no agent is used.\n   */\n  httpAgent?: Agent;\n\n  /**\n   * Specify a custom `fetch` function implementation.\n   *\n   * If not provided, we use `node-fetch` on Node.js and otherwise expect that `fetch` is\n   * defined globally.\n   */\n  fetch?: Core.Fetch | undefined;\n\n  /**\n   * The maximum number of times that the client will retry a request in case of a\n   * temporary failure, like a network error or a 5XX error from the server.\n   *\n   * @default 2\n   */\n  maxRetries?: number;\n\n  /**\n   * Default headers to include with every request to the API.\n   *\n   * These can be removed in individual requests by explicitly setting the\n   * header to `undefined` or `null` in request options.\n   */\n  defaultHeaders?: Core.Headers;\n\n  /**\n   * Default query parameters to include with every request to the API.\n   *\n   * These can be removed in individual requests by explicitly setting the\n   * param to `undefined` in request options.\n   */\n  defaultQuery?: Core.DefaultQuery;\n}\n\n/**\n * API Client for interfacing with the Terminal API.\n */\nexport class Terminal extends Core.APIClient {\n  bearerToken: string;\n\n  private _options: ClientOptions;\n\n  /**\n   * API Client for interfacing with the Terminal API.\n   *\n   * @param {string | undefined} [opts.bearerToken=process.env['TERMINAL_BEARER_TOKEN'] ?? undefined]\n   * @param {Environment} [opts.environment=production] - Specifies the environment URL to use for the API.\n   * @param {string} [opts.baseURL=process.env['TERMINAL_BASE_URL'] ?? https://api.terminal.shop/] - Override the default base URL for the API.\n   * @param {number} [opts.timeout=1 minute] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n   * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n   * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n   * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n   * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n   * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n   */\n  constructor({\n    baseURL = Core.readEnv('TERMINAL_BASE_URL'),\n    bearerToken = Core.readEnv('TERMINAL_BEARER_TOKEN'),\n    ...opts\n  }: ClientOptions = {}) {\n    if (bearerToken === undefined) {\n      throw new Errors.TerminalError(\n        \"The TERMINAL_BEARER_TOKEN environment variable is missing or empty; either provide it, or instantiate the Terminal client with an bearerToken option, like new Terminal({ bearerToken: 'My Bearer Token' }).\",\n      );\n    }\n\n    const options: ClientOptions = {\n      bearerToken,\n      ...opts,\n      baseURL,\n      environment: opts.environment ?? 'production',\n    };\n\n    if (baseURL && opts.environment) {\n      throw new Errors.TerminalError(\n        'Ambiguous URL; The `baseURL` option (or TERMINAL_BASE_URL env var) and the `environment` option are given. If you want to use the environment you must pass baseURL: null',\n      );\n    }\n\n    super({\n      baseURL: options.baseURL || environments[options.environment || 'production'],\n      timeout: options.timeout ?? 60000 /* 1 minute */,\n      httpAgent: options.httpAgent,\n      maxRetries: options.maxRetries,\n      fetch: options.fetch,\n    });\n\n    this._options = options;\n\n    this.bearerToken = bearerToken;\n  }\n\n  product: API.ProductResource = new API.ProductResource(this);\n  profile: API.ProfileResource = new API.ProfileResource(this);\n  address: API.AddressResource = new API.AddressResource(this);\n  card: API.CardResource = new API.CardResource(this);\n  cart: API.CartResource = new API.CartResource(this);\n  order: API.OrderResource = new API.OrderResource(this);\n  subscription: API.SubscriptionResource = new API.SubscriptionResource(this);\n  token: API.TokenResource = new API.TokenResource(this);\n  app: API.AppResource = new API.AppResource(this);\n  email: API.Email = new API.Email(this);\n  view: API.View = new API.View(this);\n\n  protected override defaultQuery(): Core.DefaultQuery | undefined {\n    return this._options.defaultQuery;\n  }\n\n  protected override defaultHeaders(opts: Core.FinalRequestOptions): Core.Headers {\n    return {\n      ...super.defaultHeaders(opts),\n      ...this._options.defaultHeaders,\n    };\n  }\n\n  protected override authHeaders(opts: Core.FinalRequestOptions): Core.Headers {\n    return { Authorization: `Bearer ${this.bearerToken}` };\n  }\n\n  static Terminal = this;\n  static DEFAULT_TIMEOUT = 60000; // 1 minute\n\n  static TerminalError = Errors.TerminalError;\n  static APIError = Errors.APIError;\n  static APIConnectionError = Errors.APIConnectionError;\n  static APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\n  static APIUserAbortError = Errors.APIUserAbortError;\n  static NotFoundError = Errors.NotFoundError;\n  static ConflictError = Errors.ConflictError;\n  static RateLimitError = Errors.RateLimitError;\n  static BadRequestError = Errors.BadRequestError;\n  static AuthenticationError = Errors.AuthenticationError;\n  static InternalServerError = Errors.InternalServerError;\n  static PermissionDeniedError = Errors.PermissionDeniedError;\n  static UnprocessableEntityError = Errors.UnprocessableEntityError;\n\n  static toFile = Uploads.toFile;\n  static fileFromPath = Uploads.fileFromPath;\n}\n\nTerminal.ProductResource = ProductResource;\nTerminal.ProfileResource = ProfileResource;\nTerminal.AddressResource = AddressResource;\nTerminal.CardResource = CardResource;\nTerminal.CartResource = CartResource;\nTerminal.OrderResource = OrderResource;\nTerminal.SubscriptionResource = SubscriptionResource;\nTerminal.TokenResource = TokenResource;\nTerminal.AppResource = AppResource;\nTerminal.Email = Email;\nTerminal.View = View;\nexport declare namespace Terminal {\n  export type RequestOptions = Core.RequestOptions;\n\n  export {\n    ProductResource as ProductResource,\n    type Product as Product,\n    type ProductVariant as ProductVariant,\n    type ProductListResponse as ProductListResponse,\n  };\n\n  export {\n    ProfileResource as ProfileResource,\n    type Profile as Profile,\n    type ProfileUpdateResponse as ProfileUpdateResponse,\n    type ProfileMeResponse as ProfileMeResponse,\n    type ProfileUpdateParams as ProfileUpdateParams,\n  };\n\n  export {\n    AddressResource as AddressResource,\n    type Address as Address,\n    type AddressCreateResponse as AddressCreateResponse,\n    type AddressListResponse as AddressListResponse,\n    type AddressDeleteResponse as AddressDeleteResponse,\n    type AddressCreateParams as AddressCreateParams,\n  };\n\n  export {\n    CardResource as CardResource,\n    type Card as Card,\n    type CardCreateResponse as CardCreateResponse,\n    type CardListResponse as CardListResponse,\n    type CardDeleteResponse as CardDeleteResponse,\n    type CardCreateParams as CardCreateParams,\n  };\n\n  export {\n    CartResource as CartResource,\n    type Cart as Cart,\n    type CartConvertResponse as CartConvertResponse,\n    type CartGetResponse as CartGetResponse,\n    type CartSetAddressResponse as CartSetAddressResponse,\n    type CartSetCardResponse as CartSetCardResponse,\n    type CartSetItemResponse as CartSetItemResponse,\n    type CartSetAddressParams as CartSetAddressParams,\n    type CartSetCardParams as CartSetCardParams,\n    type CartSetItemParams as CartSetItemParams,\n  };\n\n  export {\n    OrderResource as OrderResource,\n    type Order as Order,\n    type OrderListResponse as OrderListResponse,\n    type OrderGetResponse as OrderGetResponse,\n  };\n\n  export {\n    SubscriptionResource as SubscriptionResource,\n    type Subscription as Subscription,\n    type SubscriptionCreateResponse as SubscriptionCreateResponse,\n    type SubscriptionListResponse as SubscriptionListResponse,\n    type SubscriptionDeleteResponse as SubscriptionDeleteResponse,\n    type SubscriptionCreateParams as SubscriptionCreateParams,\n  };\n\n  export {\n    TokenResource as TokenResource,\n    type Token as Token,\n    type TokenCreateResponse as TokenCreateResponse,\n    type TokenListResponse as TokenListResponse,\n    type TokenDeleteResponse as TokenDeleteResponse,\n    type TokenGetResponse as TokenGetResponse,\n  };\n\n  export {\n    AppResource as AppResource,\n    type App as App,\n    type AppCreateResponse as AppCreateResponse,\n    type AppListResponse as AppListResponse,\n    type AppDeleteResponse as AppDeleteResponse,\n    type AppGetResponse as AppGetResponse,\n    type AppCreateParams as AppCreateParams,\n  };\n\n  export {\n    Email as Email,\n    type EmailCreateResponse as EmailCreateResponse,\n    type EmailCreateParams as EmailCreateParams,\n  };\n\n  export { View as View, type ViewInitResponse as ViewInitResponse };\n}\n\nexport { toFile, fileFromPath } from './uploads';\nexport {\n  TerminalError,\n  APIError,\n  APIConnectionError,\n  APIConnectionTimeoutError,\n  APIUserAbortError,\n  NotFoundError,\n  ConflictError,\n  RateLimitError,\n  BadRequestError,\n  AuthenticationError,\n  InternalServerError,\n  PermissionDeniedError,\n  UnprocessableEntityError,\n} from './error';\n\nexport default Terminal;\n"],
  "mappings": "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",
  "names": ["fetch", "Request", "Response", "Headers", "FormData", "Blob", "File", "ReadableStream", "File", "fetch", "opts", "retryMessage"]
}
